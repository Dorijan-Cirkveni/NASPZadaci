RB Trees:
1. Every node has a colour - either red or black
2. The root of tree is always black
3. There are no 2 adjacent red nodes(A red node cannot have a red parent or red child)
4. Every path from a node(including root) to any of its descendant NULL node has the same number of black nodes

!!! Leaf nodes are also counted as black nodes - NULL nodes are always black !!!

Logic:
1. Insert node.
2. If root, make it black and end. If not root, make it red.
3. If not root, look at parent. If parent is Black, all okay. If parent is red, look at uncle.

Branching here: if Uncle is red: (RRR) then go to RRR, otherwise go to RRB
RRR:
# Easy case
Make P and U black, make G red. Repeat process for G

RRB:
# Shitty case - 4 further cases
Left-Left(LL) case: Right rotate on P-G link. Then swap their colours
Left-Right(RL) case: First rotate left on P-X link. Then apply LL(x)
RR: Left rotate od P-G, and swap colours
RL: Similar to RL

After rotations, do recolouring!(???) -- Repeat process for P

That's it!

Algorithm:
1. Perform standard BST insertion and make the color of newly inserted nodes as RED.
2. If x is root, change color of x as BLACK (Black height of complete tree increases by 1).
3. Do following if color of x’s parent is not BLACK or x is not root. 
     1. If x’s uncle is RED (Grand parent must have been black from property 4) 
         1. Change color of parent and uncle as BLACK. 
         2. color of grand parent as RED. 
         3. Change x = x’s grandparent, repeat steps 2 and 3 for new x. 
     2. If x’s uncle is BLACK, then there can be four configurations for x, x’s parent (p) and x’s grandparent (g) (This is similar to AVL Tree) 
        1. Determine the configuration:
             1. Left Left Case (p is left child of g and x is left child of p).
             2. Left Right Case (p is left child of g and x is right child of p).
             3. Right Right Case (Mirror of case a).
             4. Right Left Case (Mirror of case c).
        ***2. Change x = x’s parent, repeat steps 2 and 3 for new x.
        

***: Not in NASP course and wikipedia, this step is only specified in geeksforgeeks website
